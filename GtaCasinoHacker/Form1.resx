<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAQAAAAAFAAACAAAAAAcAAAEIAAAADwABARAAAQMKAAMECwAAARgABAMSAAACGQAEBgwABQcOAAAH
        EAAHCQ8AAQgWAAIJFwAECBwACgsRAAAHIQADChgABQkcAAMNFAAFDhQABg0ZAAYPFQADDiAACxAbAAAN
        KAAGDyQAAw8qAAcSIgAHEx8ACBQfAAoTIwAEEigAABEtAAsUJAAHEiwABRUmAAgUKgAJFygAERkkAAYX
        LgAAFjMADBkpABMcIwAKGjEABRk2AAscLgALGzIABhw0AB8gIwAIHTUAFyEnAAkeNgALHToADB07AAof
        NwALHzgADR48AA0gOAAOITkAFyQwAAgiOwAPIjoACSM8ABAjOwAKIz0AFSU3AAskPQARJDwAFSU4ABEk
        PQAMJT4AFiY5AA0mPwATJj8AGCg7ABQnQAAVJkQADyhBABAoQgAVKEEAGSk9ABUoQgAaKj0AFilDACQs
        OAAXKkMAIC06ABgrRAAZLEUAHS89ACIvPQAVLUgAHi9CABouRwAWLkkAGy5IABswRQAjMzoAJDM7ABwx
        RgAYMEsAHTBKABwyRgAYMUwAGDNIAB0zRwAiM0cAHjJMAB40SAAbM08AIDVKACk1SAAgNE4AHDRQACA2
        SwAnOkgAKDpJAB45TwAjOU4AKDlNAB86UAAkOk8AKTpOAB86UQAqPEsAIDtSACU7UQArO1AAJjxSACw9
        UgAjPlQAKD5UACQ/VQApQVEAKUFSACpCUwArQVcAMEFWADBDUwAsQlkAKENaADJDWQApRFsALkZXADNG
        VgA0R1cAMEZcAC9IWAA2R10ALEhfADdIXQAxSloAOEtbADNKYAA4TVcANExdADlMXAA0S2EANU1eADBM
        ZAA2TGMAN01kADZPYAA3TmUAN1BhADhRYgA9UWEAOVBnAD5QZgA5UmMAPlJiADpUYAA/VF8ANVNlADxT
        agA8VWYAPVRrAD1WZwBCVmYAPVZoAD1YZAA+V2kARFdoAD9YagBAWWsAPFhxAEFYcABBWmwARlprAEJb
        bQBDWnIAQ1xuAEhcbQBEXW8ARV5wAEBddgBGX3EAS19wAEZgcgBGYm0AR2FzAEhidABOYnMASWRwAElj
        dQBKZXEASmR2AEtmcgBLZXcAUGV2AExncwBMZngATWd5AFJneABOaHoAVWp7AFZsdwBZbX8AW2+BAFtx
        fABddH8AXnWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABwMAAwMCAgICAgICAgICAgICAgICAgICAgICAgMDAzULBQUDAwMDAgMCAgICAgICAgICAgIC
        AgICAgICAAMQWScdCQcFBQcHAwMCAgICAgICAgICAgICAgIAAAMgKjJ0LTQxHQcHBQMDAwICAgICAgIC
        AgICAgIDABAkMjM6PHwxOj09MxQGAwMCAgICAgICAgICAgICAgISOjg7Pzw/fzg/RUVBOCcHAwICAgIC
        AgICAgICAgICAig8Q0NIREuEQUpNPUpCQR4DAgICAgICAgICAgICAgICFUNDSEhITYFKTVBTVEpEQiAD
        AgICAgICAgICAgICAgINO05WU1NWjk1lVFZcUU5OOgcCAgICAgICAgICAgICAgAzWFxTXF2VWFJcWFFc
        WFEzAwICAgICAgICAgICAgMDByJkZWVlaJlcXVxdYG1THxUDAgICAgICAgICAgICAgICIWpxaGpwmWRk
        ZGRwaVMOAwICAgICAgICAgICAgICAwMccW13c3ehcGpqdXBqahMCAgICAgICAgICAgICAgICAhh1e3t+
        fqt1cnV1dnJuGAICAgICAgICAgICAgICAgICAF6IhoWFrYV2gIKCg28HAgICAgICAgICAgICAgICAgIA
        XomMkJC3goWNiIiITAMCAgICAgICAgICAgICAgICAgApjY2MjLuCkZGCiYhMAwICAgICAgICAgICAgIC
        AgICAiqLjJSQu5OTk5GTk0kCAgICAgICAgICAgICAgICAgAAJJSXl5jBk5qTk56XQAICAgICAgICAgIC
        AgICAgICAgAjnJqcmMWloqWloqJPAgICAgICAgICAgICAgICAgIAACOioJ2gyqmqqKmipFUDAgICAgIC
        AgICAgICAgICAAIAFqWnqajWrq6uqLKYIAMCAgICAgICAgICAgICAgIAAgAcq6urqs+0s7W4tKwSAgIC
        AgICAgICAgICAgICAgAAAF6qrrSz1ri4uK21tWECAgICAgIAAAIAAgICAgICAAIClq6/v7rawL28wMS9
        eAICAgICAgIDAwMDAAIDAwICAiu4usK5udzExMjEvsKrEwICAgIDAwMAAwADAwMDAwIHW7zAwsLC3cnJ
        ycnHyb5AAgMCAgMDAwMDAwMDAwICACuvwMbKzMneyc3Ow9HTzagrAgICAwAAAgMDAwMDBwANoMLMyszK
        yuDaw9PDz8PD0a9mDQIDAwMDAwMHAwMAE2fEysnNzMnN4cPYw9jR0dHD1cOBBwMDAwMDAgIDAg2PvMzJ
        ysrPz9He1NTU1NLS1NTUz8+WZhwDAgIDAxx4nc3Pz8/Q0NPV2N/b2dnZ2NjZ2dnY1dPHubCVlZ+xuszS
        087NzdXV1NTU4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>